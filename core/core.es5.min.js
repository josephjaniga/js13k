"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Game = function Game(options) {
    _classCallCheck(this, Game);

    console.log("Game | constructor");
    this.CTX = options.canvas.getContext('2d');
    this.CTX.fillRect(10, 10, 10, 10);
};

var GameObject = function GameObject() {
    "use strict";

    _classCallCheck(this, GameObject);

    console.log("GameObject constructed");
    var go = new GameObject();
};

var canvas = document.getElementById("view"),
    options = { "canvas": canvas },
    game = new Game(options);

var Transform = function Transform(options) {
    _classCallCheck(this, Transform);

    this.position = options.position;
    this.size = options.size;
};

var Vector2 = (function () {
    function Vector2(options) {
        _classCallCheck(this, Vector2);

        this.x = null;
        this.y = null;
        if (options.x != null) {
            this.x = options.x;
        }
        if (options.y != null) {
            this.y = options.y;
        }
    }

    _createClass(Vector2, null, [{
        key: "zero",
        value: function zero() {
            return new Vector2({ x: 0, y: 0 });
        }
    }]);

    return Vector2;
})();